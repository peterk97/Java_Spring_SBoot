<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>academy.learnprogramming</groupId>
    <artifactId>todo-list</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- add web archive packaging tag -->
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <spring-framework.version>5.3.9</spring-framework.version>
        <lombok.version>1.18.20</lombok.version>
        <logback.version>1.2.5</logback.version>
        <javax-annotation.version>1.3.2</javax-annotation.version>
        <servlet-api.version>4.0.1</servlet-api.version>
        <jstl.version>1.2</jstl.version>
    </properties>

        <dependencies>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax-annotation.version}</version>
            </dependency>

<!--      Before we register servlet we have to add the servlet API dependency -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
    <!--  This scope is that the servlet container will provide this dependency for us -> by doing that we do not have to
     package it within our war file and that results a much smaller war file!-->
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
            </dependency>

        </dependencies>

            <build>
                <plugins>
<!--       maven compiler plugin-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <release>${maven.compiler.source}</release>
                            <target>${maven.compiler.target}</target>
                            <source>${maven.compiler.source}</source>
                        </configuration>
                    </plugin>

<!--        maven war plugin-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.3.1</version>
                        <configuration>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>

<!--        cargo plugin-->
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.6.7</version>
                        <configuration>
                            <container>
                                <containerId>tomcat9x</containerId>
<!--                Type property we specify whether to deploy embedded, local or remote tomcat  (embedded is the simplest config) -->
                                <type>embedded</type>
                            </container>
                        </configuration>
                    </plugin>

                </plugins>
            </build>

</project>